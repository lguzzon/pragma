name: Scala CI

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-linux:
    name: Build and release for Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set release version as output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Setup GraalVM environment
        uses: DeLaGuardo/setup-graalvm@2.0
        with:
          graalvm-version: "20.0.0.java11"
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build JAR
        run: |
          sbt 'clean;daemon/docker:publish; cli/graalvm-native-image:packageBin' &&  \
          sudo mkdir linux-release && \
          sudo cp ./cli/target/graalvm-native-image/pragma ./linux-release && \
          sudo cp ./cli/src/main/resources/docker-compose.yml ./linux-release && \ 
          sudo tar czvf ./pragma-linux.tar.gz ./linux-release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          release_name: ${{ steps.vars.outputs.tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./pragma-linux.tar.gz
          asset_name: pragma-linux.tar.gz
          asset_content_type: application/gzip
